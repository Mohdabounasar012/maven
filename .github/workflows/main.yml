name: Java Application Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy-java:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code from the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the project with Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Add SSH private key to the agent
      - name: Add SSH private key to the agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 5: Deploy the Java Application via SSH
      - name: Deploy Java Application via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Step 1: Install OpenJDK 17 and wget
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk wget

            # Step 2: Download and install Tomcat 10
            TOMCAT_VERSION="10.1.0"  # Updated to a valid version
            TOMCAT_URL="https://dlcdn.apache.org/tomcat/tomcat-10/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz"
            wget $TOMCAT_URL
            if [ $? -ne 0 ]; then
              echo "Tomcat download failed. Exiting."
              exit 1
            fi

            # Step 3: Install Tomcat
            sudo mkdir /opt/tomcat
            sudo tar -xzf apache-tomcat-${TOMCAT_VERSION}.tar.gz -C /opt/tomcat --strip-components=1
            sudo chown -R $USER:$USER /opt/tomcat/
            sudo chmod -R u+x /opt/tomcat/bin

            # Step 4: Start Tomcat service
            sudo sh /opt/tomcat/bin/startup.sh
            sudo systemctl daemon-reload
            sudo systemctl start tomcat
            sudo systemctl enable tomcat

            # Step 5: Allow Tomcat's default port (8080)
            sudo ufw allow 8080
            sudo ufw reload

            # Step 6: Deploy the WAR file to Tomcat's webapps directory
            rm -rf /opt/tomcat/webapps/*
            cp /home/${USER}/workspace/my-maven-webapp/target/my-maven-webapp.war /opt/tomcat/webapps/my-maven-webapp.war

            # Step 7: Restart Tomcat to deploy the application
            sudo sh /opt/tomcat/bin/shutdown.sh
            sudo sh /opt/tomcat/bin/startup.sh
          EOF
